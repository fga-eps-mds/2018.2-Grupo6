sudo: required

language: python
python:
  - "3.4"

cache: pip

install:
  - pip install -r api/api_gateway/requirements/dev.txt

virtualenv:
  system_site_packages: true

stages: 
  - test
  - publish
  - deploy

services:
  - docker

jobs:
  include:
    - stage: test
      name: "Checking Production Container Run"
      sudo: required
      services:
        - docker
      script:
        - make check-docker-production

    - stage: test
      name: "Checking Development Container Run"
      sudo: required
      services:
        - docker
      script:
        - make check-docker-dev

    - stage: test
      name: "Staging Integration"
      sudo: required
      services:
        - docker
      git:
        depth: 50
      script:
        - echo ${CODECOV_TOKEN} >> api/api_gateway/codecov_token
        - make integration-tests file=dc-integration-test.staging.yml

    - stage: test
      name: "Production Integration"
      sudo: required
      services:
        - docker
      if: branch = master
      git:
        depth: 50
      script:
        - make integration-tests file=dc-integration-test.production.yml

    - stage: publish
      name: "Publish Production docker images"
      sudo: required
      services:
        - docker
      if: tag =~ /(\\d+\\.)?(\\d+\\.)?(\\*|\\d+)$/
      script:
        - cd api && sh run-publish-docker.sh production

    - stage: publish
      name: "Publish Staging docker images"
      sudo: required
      services:
        - docker
      if: branch = dev
      script:
        - cd api && sh run-publish-docker.sh staging

    - stage: deploy
      name: "Github Pages deploy"
      sudo: required
      services:
        - docker
      if: branch = master
      script:
        - sh run-publish-pages.sh

    - stage: deploy
      name: "Deploying to production"
      sudo: required
      services:
        - docker
      if: tag =~ /(\\d+\\.)?(\\d+\\.)?(\\*|\\d+)$/
      script:
        - cd api
        - sh install-kubectl.sh
        - sh run-deploy.sh production

    - stage: deploy
      install: npm install -g heroku
      name: "Deploying to Staging"
      if: branch = dev
      script:
        - . ./heroku-helper.sh
        - updateVersion api/VERSION
        - loginHeroku $EMAIL_HEROKU $HEROKU_DEV_KEY
        - deployMaster $HEROKU_APP api/api_gateway