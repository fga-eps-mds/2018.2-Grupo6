sudo: required

language: python
python:
  - "3.4"

cache: pip

git:
  depth: false

install:
  - pip install -r api/api_gateway/requirements/dev.txt

virtualenv:
  system_site_packages: true

stages:
  - test
  - check
  - build
  - deploy

services:
  - docker

jobs:
  include:

# container check
    - stage: check
      if: branch = master
      name: "Checking Production Container Run"
      sudo: required
      services:
        - docker
      script:
        - cd api && make check-docker-production

# container check
    - stage: check
      name: "Checking Development Container Run"
      sudo: required
      services:
        - docker
      script:
        - cd api && make check-docker-dev

# Integration test
    - stage: test
      name: "Staging Integration"
      script:
        - make integration-tests file=dc-integration-test.staging.yml

# test staging + codecov
    - stage: test
      if: branch = dev
      name: "Staging Integration codecov publish"
      script:
        - make integration-tests file=dc-integration-test.staging.yml
        - cd api/api_gateway && codecov -t ${CODECOV_TOKEN}

# Test production
    # - stage: test
    #   if: branch = dev
    #   name: "Production Integration"
    #   script:
    #     - make integration-tests file=dc-integration-test.production.yml

# Docker hub publish
    - stage: build
      if: branch = master
      name: "Publish production images on docker hub"
      sudo: required
      services:
        - docker
      script:
        - cd api && sh run-publish-docker.sh production

# Docker hub publish
    - stage: build
      if: branch = dev
      name: "Publish staging images on docker hub"
      sudo: required
      services:
        - docker
      script:
        - cd api && sh run-publish-docker.sh staging

# Heroku cli publish
    - stage: deploy
      if: branch = dev
      name: "Deploying to Staging"
      install: npm install -g heroku
      script:
        - . ./heroku-helper.sh
        - updateVersion api/VERSION
        - loginHeroku $EMAIL_HEROKU $HEROKU_DEV_KEY
        - deployMaster $HEROKU_APP api/api_gateway

# Tag Regex
    - stage: deploy
      if: branch = /(\d+\.)?(\d+\.)?(\*|\d+)$/
      name: "Deploying to Production"
      script:
        - cd api
        - sh install-kubectl.sh
        - sh run-deploy.sh production

# gh-pages publish
    - stage: deploy
      if: branch = master
      name: "Publishing GH-Pages"
      sudo: required
      services:
        - docker
      script:
        - sh run-publish-pages.sh